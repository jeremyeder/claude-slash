name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js for markdown linting
      uses: actions/setup-node@v4
      with:
        node-version: '20'
    - name: Cache npm global packages
      uses: actions/cache@v4
      with:
        path: ~/.npm
        key: ${{ runner.os }}-npm-global-${{ hashFiles('**/package.json') }}
        restore-keys: |
          ${{ runner.os }}-npm-global-

    - name: Cache apt packages
      uses: actions/cache@v4
      with:
        path: /var/cache/apt/archives
        key: ${{ runner.os }}-apt-${{ hashFiles('.github/workflows/ci.yml') }}
        restore-keys: |
          ${{ runner.os }}-apt-
    - name: Install linting tools
      run: |
        # Install markdownlint
        npm install -g markdownlint-cli

        # Install shellcheck
        sudo apt-get update
        sudo apt-get install -y shellcheck

    - name: Lint markdown files
      run: |
        echo "Linting markdown files..."
        markdownlint --config .markdownlint.json *.md
        echo "✅ Markdown linting complete"

    - name: Lint shell scripts with shellcheck
      run: |
        echo "Linting shell scripts with shellcheck..."

        # Lint remaining shell scripts in scripts directory
        shellcheck scripts/*.sh

        echo "✅ Shell script linting complete"

  test:
    runs-on: ubuntu-latest
    needs: lint

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
        echo "Verifying pytest installation..."
        which pytest
        pytest --version

    - name: Validate Python package structure
      run: |
        echo "Checking Python package structure..."
        test -f pyproject.toml || (echo "Missing pyproject.toml" && exit 1)
        test -f src/claude_slash/__init__.py || (echo "Missing main package" && exit 1)
        test -f src/claude_slash/main.py || (echo "Missing main.py" && exit 1)
        echo "✅ Python package structure valid"

    - name: Run Python tests
      run: |
        echo "Running Python test suite..."
        pytest -v --tb=short
        echo "✅ All tests passed"

    - name: Validate CLI functionality
      run: |
        echo "Testing CLI functionality..."
        claude-slash --help
        echo "✅ CLI functionality validated"
